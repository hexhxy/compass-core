<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>30</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty plugin="zmq-event-publisher@0.0.3">
      <enabled>false</enabled>
    </org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ZUUL_BRANCH</name>
          <description></description>
          <defaultValue>dev/experimental</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>compass-bare</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
if [[ -e compass-core ]]; then
    rm -rf compass-core
fi
git clone https://git.openstack.org/openstack/compass-core -b $ZUUL_BRANCH
cd compass-core
if [[ -z $ZUUL_PROJECT ]]; then
    echo &quot;ZUUL_PROJECT is not set&quot;
elif [[ -z $ZUUL_BRANCH ]]; then
    echo &quot;ZUUL_BRANCH is not set&quot;
elif [[ -z $ZUUL_REF ]]; then
    echo &quot;ZUUL_REF is not set&quot;
elif [[ &quot;$ZUUL_PROJECT&quot; != &quot;openstack/compass-core&quot; ]]; then
    echo &quot;$ZUUL_PROJECT is not openstack/compass-core&quot;
else
    git_repo=$ZUUL_URL/openstack/compass-core
    git_ref=$ZUUL_REF
    git_branch=$ZUUL_BRANCH
    git reset --hard remotes/origin/$git_branch
    git fetch $git_repo $git_ref 
    git merge FETCH_HEAD
    git clean -x -f
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
killall celeryd |exit 0
cp compass-core/misc/ci/*.sh .
export tempest=true
./test-install.sh</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
source compass-core/install/install.conf.template
export tempest=true
export tempest_network=true
#export tempest_full=true
export REGTEST_CONF=regtest12.conf
./compass-core/regtest/regtest.sh</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <be.certipost.hudson.plugin.SCPRepositoryPublisher plugin="scp@1.9-SNAPSHOT">
      <siteName>local_log_server</siteName>
      <entries>
        <be.certipost.hudson.plugin.Entry>
          <filePath>$LOG_PATH</filePath>
          <sourceFile></sourceFile>
          <keepHierarchy>true</keepHierarchy>
          <copyConsoleLog>true</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath>$LOG_PATH</filePath>
          <sourceFile>cobbler_logs/**</sourceFile>
          <keepHierarchy>true</keepHierarchy>
          <copyConsoleLog>false</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath>$LOG_PATH</filePath>
          <sourceFile>compass_logs/*.log</sourceFile>
          <keepHierarchy>true</keepHierarchy>
          <copyConsoleLog>false</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath>$LOG_PATH</filePath>
          <sourceFile>compass_logs/*.py</sourceFile>
          <keepHierarchy>true</keepHierarchy>
          <copyConsoleLog>false</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath>$LOG_PATH</filePath>
          <sourceFile>chef_logs/**</sourceFile>
          <keepHierarchy>true</keepHierarchy>
          <copyConsoleLog>false</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
      </entries>
    </be.certipost.hudson.plugin.SCPRepositoryPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.14">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.AbortOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.3.2"/>
  </buildWrappers>
</project>